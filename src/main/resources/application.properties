spring.application.name=goodluck-sizhongmin-provider
server.port=8080
eureka.client.serviceUrl.defaultZone=http://localhost:1001/eureka/



spring.datasource.url=jdbc:mysql://localhost:3306/yuekao
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.username=root
spring.datasource.password=root
#spring.datasource.password=ENC(n8U82FzXDQQuih96o64Ynw==)
spring.jpa.database=MYSQL
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html


spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true


#自己邮箱的端口号
spring.mail.host=smtp.163.com
#自己邮箱账号
spring.mail.username=13260283502@163.com
#自己邮箱密码
spring.mail.password=Gg13231856982
#设置字符集
spring.mail.default-encoding=UTF-8
#这封邮件是谁发送的
mail.fromMail.addr=13260283502@163.com


# 下面为连接池的补充设置，应用到上面所有数据源中
# 初始化大小，最小，最大
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=20
# 配置获取连接等待超时的时间
spring.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20




#mongodb
spring.data.mongodb.uri=mongodb://dba:dba@169.254.59.140:27017/admin




# Redis数据库索引（默认为0）
spring.redis.database=0
# Redis服务器IP地址
spring.redis.host=127.0.0.1
# Redis服务器连接端口锕pp
spring.redis.port=6379
# Redis服务器连接密码（默认为空）
spring.redis.password=
# 连接池最大连接数（使用负值表示没有限制）
spring.redis.pool.max-active=8
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.pool.max-wait=-1
# 连接池中的最大空闲连接
spring.redis.pool.max-idle=8
# 连接池中的最小空闲连接
spring.redis.pool.min-idle=0
# 连接超时时间（毫秒）
spring.redis.timeout=0